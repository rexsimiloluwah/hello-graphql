1. Login a user
mutation{
  loginUser(email:"rexsimiloluwa@gmail.com",password:"password-2001"){
    user{
      id,
      email,
      name,
      username,
      createdAt,
    },
    accessToken,
    refreshToken
  }
}

2. Get user (sample authenticated query using Bearer token)
query{
    getUser(id:1){
        __typename 
        ... on User{
            id,
            name,
            email,
            bio,
        }
        __typename 
        ... on AuthInfoField{
            message
        }
    }
}

3. Refresh Token Mutation
mutation{
    refreshToken(refreshToken:"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0eXBlIjoicmVmcmVzaCIsImlhdCI6MTYzNjYyNjE4MSwibmJmIjoxNjM2NjI2MTgxLCJqdGkiOiIyNWExMTYwZi1mYTg5LTRkY2EtOTg3YS0xMTgzOWFhYTgxYzMiLCJpZGVudGl0eSI6eyJpZCI6MSwiZW1haWwiOiJyZXhzaW1pbG9sdXdhQGdtYWlsLmNvbSJ9LCJleHAiOjE2MzkyMTgxODF9.XHMWzIL8NCYkocH0mW6tF1lAQ7riUhGjdJkfeIrBzyw"){
        user{
            id,
            email
        },
        accessToken
    }
}

4. Add Post Mutation (Bearer token required in Header)
mutation{
  addPost(title:"Test title 2",category:"Test category 2",content:"Test content 2",tags:["tag1","tag2"],){
    post{
      __typename 
      ... on Post{
        id,
        title
      }
      __typename
      ... on AuthInfoField{
          message
      }
      
    }
  }
}

5. Update Post Mutation (Bearer token required in Header)
mutation{
  updatePost(id:1,title:"Test title 3",tags:["tag1","tag2"]){
    post{
      __typename 
      ... on Post{
        id,
        title
      }
      __typename
      ... on AuthInfoField{
          message
      }
      
    }
  }
}

6. Delete Post Mutation (Bearer token required in Header)
mutation{
  deletePost(id:6){
    post{
      __typename 
      ... on Post{
        id,
        title,
        userId
      }
      __typename
      ... on AuthInfoField{
          message
      }
      
    }
  }
}

7. Add Comment Mutation (Bearer token required in Header)
mutation{
  addComment(postId:2,content:"Nice Post"){
    comment{
      __typename 
      ... on Comment{
        id,
        comment,
        userId,
        postId
      }
      __typename
      ... on AuthInfoField{
          message
      }
      
    }
  }
}

8. Update Comment Mutation
mutation{
  updateComment(id:2,content:"Nice Post updated"){
    comment{
      __typename 
      ... on Comment{
        id,
        comment,
        userId,
        postId
      }
      __typename
      ... on AuthInfoField{
          message
      }
      
    }
  }
}

9. Create User Mutation
mutation{
    createUser(name:"Similoluwa Okunowo",username:"rexidic",email:"rexsimiloluwa@gmail.com",password:"password-2001",bio:"Crazy dude | Sofware Engineer"){
        user{
            id,
            name,
            username,
            email,
            createdAt
        }
    }
}

10. Get all Users query 
query{
    getUsers{
        id,
        name,
        username,
        email,
        createdAt
    }
}

11. Get all comments for a post 
query{
    getPostComments(postId:2){
        id,
        comment,
        createdAt
    }
}

12. Get all posts 
query{
  getPosts{
    id,
    title,
    content,
    category,
    createdAt
  }
}